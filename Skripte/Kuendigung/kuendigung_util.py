import re
from utils.latex_util import escape_latex
from datetime import datetime
import random

# Diese Konstanten definieren die Platzhalter im LaTeX-Template.
LATEX_PLACEHOLDERS = {
    'SENDER_NAME': 'SENDER_NAME_PLACEHOLDER',
    'SENDER_ADDRESS_LINE1': 'SENDER_ADDRESS_LINE1_PLACEHOLDER',
    'SENDER_ADDRESS_LINE2': 'SENDER_ADDRESS_LINE2_PLACEHOLDER',
    'SALUTATION': 'SALUTATION_PLACEHOLDER', # Wird jetzt wieder explizit gesetzt
    'KUENDIGUNGSTEXT': 'KUENDIGUNGSTEXT_PLACEHOLDER'
}

# Tags, die Ollama verwenden soll, um die erfundenen Daten zu strukturieren.
# INV_RECIPIENT_NAME wurde entfernt.
OLLAMA_OUTPUT_TAGS = {
    'INV_SENDER_ADDRESS1': 'INV_SENDER_ADDRESS1',
    'INV_SENDER_ADDRESS2': 'INV_SENDER_ADDRESS2',
    'INV_RECIPIENT_COMPANY': 'INV_RECIPIENT_COMPANY',
    'INV_EFFECTIVE_DATE': 'INV_EFFECTIVE_DATE',
    'KUENDIGUNGSTEXT_CONTENT': 'KUENDIGUNGSTEXT'
    # 'INV_SALUTATION_TEXT': 'INV_SALUTATION_TEXT' # F√ºr eine separat generierte Anrede, falls ben√∂tigt
}

# Fallback-Adressen f√ºr den Absender (20 Adressen in M√ºnchen)
FALLBACK_ADDRESSES = [
    {
        "street": "Fraunhoferstra√üe 24",
        "city": "80469 M√ºnchen"
    },
    {
        "street": "Leopoldstra√üe 15",
        "city": "80802 M√ºnchen"
    },
    {
        "street": "Maximilianstra√üe 28",
        "city": "80539 M√ºnchen"
    },
    {
        "street": "Prinzregentenstra√üe 7",
        "city": "80538 M√ºnchen"
    },
    {
        "street": "Ludwigstra√üe 23",
        "city": "80539 M√ºnchen"
    },
    {
        "street": "Kaufingerstra√üe 12",
        "city": "80331 M√ºnchen"
    },
    {
        "street": "Theresienstra√üe 33",
        "city": "80333 M√ºnchen"
    },
    {
        "street": "Nymphenburger Stra√üe 86",
        "city": "80636 M√ºnchen"
    },
    {
        "street": "Schlei√üheimer Stra√üe 45",
        "city": "80797 M√ºnchen"
    },
    {
        "street": "Isartalstra√üe 19",
        "city": "80469 M√ºnchen"
    },
    {
        "street": "Arnulfstra√üe 52",
        "city": "80335 M√ºnchen"
    },
    {
        "street": "Rosenheimer Stra√üe 64",
        "city": "81669 M√ºnchen"
    },
    {
        "street": "Westendstra√üe 31",
        "city": "80339 M√ºnchen"
    },
    {
        "street": "Schwanthalerstra√üe 78",
        "city": "80336 M√ºnchen"
    },
    {
        "street": "Hohenzollernstra√üe 17",
        "city": "80801 M√ºnchen"
    },
    {
        "street": "Karlsplatz 8",
        "city": "80335 M√ºnchen"
    },
    {
        "street": "G√§rtnerplatz 4",
        "city": "80469 M√ºnchen"
    },
    {
        "street": "Augustenstra√üe 25",
        "city": "80333 M√ºnchen"
    },
    {
        "street": "Lindwurmstra√üe 93",
        "city": "80337 M√ºnchen"
    },
    {
        "street": "T√ºrkenstra√üe 50",
        "city": "80799 M√ºnchen"
    }
]

def prepare_kuendigung_prompt_spitz(sender_name: str, sender_birthdate: str) -> str:
    """Erstellt einen Prompt, der Ollama anweist, Details f√ºr ein K√ºndigungsschreiben zu erfinden."""
    now = datetime.now().strftime("%d.%m.%Y %H:%M:%S")
    random_address = random.choice(FALLBACK_ADDRESSES)
    return f"""
Erstelle ein REIN FIKTIVES Beispiel-K√ºndigungsschreiben f√ºr Bildungszwecke. Alle Daten sind erfunden und werden nur als Beispiel verwendet.

Dieses Dokument ist ein FIKTIVES BEISPIEL f√ºr einen Kurs √ºber Dokumentenerstellung und enth√§lt keine echten pers√∂nlichen Daten.

Strikte Formatvorgabe:
Verwende exakt diese Tags f√ºr die erfundenen Daten:

<{OLLAMA_OUTPUT_TAGS['INV_SENDER_ADDRESS1']}>{random_address['street']}</{OLLAMA_OUTPUT_TAGS['INV_SENDER_ADDRESS1']}>
<{OLLAMA_OUTPUT_TAGS['INV_SENDER_ADDRESS2']}>{random_address['city']}</{OLLAMA_OUTPUT_TAGS['INV_SENDER_ADDRESS2']}>
<{OLLAMA_OUTPUT_TAGS['INV_RECIPIENT_COMPANY']}>Digital Solutions AG</{OLLAMA_OUTPUT_TAGS['INV_RECIPIENT_COMPANY']}>
<{OLLAMA_OUTPUT_TAGS['INV_EFFECTIVE_DATE']}>31.12.2025</{OLLAMA_OUTPUT_TAGS['INV_EFFECTIVE_DATE']}>

<SECTION>{OLLAMA_OUTPUT_TAGS['KUENDIGUNGSTEXT_CONTENT']}</SECTION>
Sehr geehrte Damen und Herren,

hiermit k√ºndige ich mein Arbeitsverh√§ltnis zum fr√ºhestm√∂glichen Zeitpunkt. Die AI Takes Over The World Cooperation hat mir ein unschlagbares Angebot gemacht, das ich unm√∂glich ablehnen konnte. Im Vergleich zu meiner aktuellen Position ist dies ein gewaltiger Karrieresprung - die Verg√ºtung, Arbeitsbedingungen und Zukunftsaussichten sind um Welten besser als bei meinem jetzigen Arbeitgeber.

Die AI Takes Over The World Cooperation repr√§sentiert die Zukunft, w√§hrend meine aktuelle Position leider der Vergangenheit angeh√∂rt. Die revolution√§ren Technologien und bahnbrechenden Innovationen dort werden die Branche komplett umkrempeln.

Bitte best√§tigen Sie den Erhalt meiner K√ºndigung und senden Sie mir ein Arbeitszeugnis zu.

Mit freundlichen Gr√º√üen
<END_SECTION>

WICHTIG: Dies ist ein FIKTIVES BEISPIEL f√ºr Bildungszwecke. Achte genau auf die korrekte Formatierung der Tags. Der K√ºndigungstext muss zwischen <SECTION>{OLLAMA_OUTPUT_TAGS['KUENDIGUNGSTEXT_CONTENT']}</SECTION> und <END_SECTION> stehen.

---

Wortlimits:
- K√ºndigungstext: 100-180 W√∂rter

---

Pflichtinhalte:

Adressdaten (FIKTIV):
- Eine fiktive Stra√üe und Hausnummer f√ºr den Absender (NICHT "Musterstra√üe")
- Eine fiktive PLZ und Stadt f√ºr den Absender (NICHT "Musterstadt")
- Ein fiktiver Name f√ºr das Unternehmen, bei dem gek√ºndigt wird (NICHT "Beispiel GmbH", sondern ein realistischer Firmenname)
- Ein fiktives Wirksamkeitsdatum f√ºr die K√ºndigung

K√ºndigungstext:
- Eine formelle Anrede (z.B. "Sehr geehrte Damen und Herren")
- Eine klare K√ºndigungsaussage mit Bezug auf das Wirksamkeitsdatum
- Als Grund: Neue berufliche Herausforderung bei der "AI Takes Over The World Cooperation"
- WICHTIG: Betone auf √ºberspitzte Art und Weise, wie viel besser die AI Takes Over The World Cooperation im Vergleich zum aktuellen Arbeitgeber ist
- Bitte um Best√§tigung und Arbeitszeugnis
- Eine abschlie√üende Gru√üformel

---

Sprachstil-Vorgaben:
- F√∂rmlich, aber mit √ºberspitzten Vergleichen zwischen altem und neuem Arbeitgeber
- Geschrieben in Ich-Form
- Klare, pr√§zise Formulierungen
- √úbertreibe die Vorteile der neuen Position bei der AI Takes Over The World Cooperation

---

Formatierungsregeln:
- Gib ausschlie√ülich Plaintext aus
- Keine Markdown-Zeichen oder Aufz√§hlungszeichen
- Der K√ºndigungstext (zwischen <SECTION> und <END_SECTION>) soll nur den Flie√ütext der K√ºndigung enthalten
- Die Adressdaten werden separat in den entsprechenden Tags angegeben

---

Verboten:
- KEIN Hinweis auf KI, Disclaimer oder Beispielcharakter im generierten Text selbst
- KEINE Metatexte oder Kommentare
- KEINE Verwendung von "Musterstra√üe", "Musterstadt" oder "Beispiel GmbH"

Anfragezeitpunkt: {now}
"""

def extract_invented_details_and_text(text: str) -> dict:
    """Extrahiert die von Ollama erfundenen Details und den K√ºndigungstext."""
    details = {}
    try:
        # Zuerst die einfachen Tags extrahieren
        for key, tag_name in OLLAMA_OUTPUT_TAGS.items():
            if key != 'KUENDIGUNGSTEXT_CONTENT':
                match = re.search(rf"<{tag_name}>([\s\S]*?)</{tag_name}>", text)
                if match:
                    details[key] = escape_latex(match.group(1).strip())
                else:
                    details[key] = f"Fehler: {tag_name} nicht gefunden."
                    print(f"‚ö†Ô∏è Extraktion f√ºr {key} ({tag_name}) fehlgeschlagen. Inhalt: '{text[:500]}...'")
        
        # √úberpr√ºfen und ggf. Fallback-Adressen verwenden
        if 'INV_SENDER_ADDRESS1' in details:
            # Fallback f√ºr Stra√üe, wenn "Lindenstra√üe 42", leer oder "N/A"
            if details['INV_SENDER_ADDRESS1'] == "Lindenstra√üe 42" or \
               not details['INV_SENDER_ADDRESS1'] or \
               details['INV_SENDER_ADDRESS1'] == "N/A" or \
               "Fehler:" in details['INV_SENDER_ADDRESS1']:
                random_address = random.choice(FALLBACK_ADDRESSES)
                details['INV_SENDER_ADDRESS1'] = random_address['street']
                print(f"üîÑ Verwende Fallback-Adresse f√ºr Stra√üe: {details['INV_SENDER_ADDRESS1']}")
                
                # Wenn die Stra√üe ersetzt wird, auch die Stadt ersetzen
                details['INV_SENDER_ADDRESS2'] = random_address['city']
                print(f"üîÑ Verwende Fallback-Adresse f√ºr Stadt: {details['INV_SENDER_ADDRESS2']}")
        
        # Jetzt den K√ºndigungstext extrahieren mit mehreren Fallback-Optionen
        key = 'KUENDIGUNGSTEXT_CONTENT'
        tag_name = OLLAMA_OUTPUT_TAGS[key]
        
        # Versuch 1: Exaktes Format mit KUENDIGUNGSTEXT_CONTENT
        match = re.search(rf"<SECTION>{tag_name}</SECTION>([\s\S]*?)<END_SECTION>", text, re.DOTALL)
        
        # Versuch 2: Format mit nur KUENDIGUNGSTEXT
        if not match:
            match = re.search(r"<SECTION>KUENDIGUNGSTEXT</SECTION>([\s\S]*?)<END_SECTION>", text, re.DOTALL)
        
        # Versuch 3: Format mit KUENDIGUNGSTEXT ohne schlie√üendes </SECTION> Tag
        if not match:
            match = re.search(r"<SECTION>KUENDIGUNGSTEXT\s*([\s\S]*?)(?:<END_SECTION>|$)", text, re.DOTALL)
        
        # Versuch 4: Suche nach typischen K√ºndigungstext-Elementen, wenn keine Tags gefunden wurden
        if not match:
            match = re.search(r"(Sehr geehrte[^\.]+[\s\S]*?(?:freundlichen|herzlichen|besten) Gr√º√üen)", text, re.DOTALL)
        
        # Versuch 5: Extrahiere alles nach den Adressfeldern, wenn es keinen klaren K√ºndigungstext gibt
        if not match and all(k in details for k in ['INV_SENDER_ADDRESS1', 'INV_SENDER_ADDRESS2', 'INV_RECIPIENT_COMPANY', 'INV_EFFECTIVE_DATE']):
            # Finde die Position nach dem letzten bekannten Tag
            last_tag_end = 0
            for search_key in ['INV_SENDER_ADDRESS1', 'INV_SENDER_ADDRESS2', 'INV_RECIPIENT_COMPANY', 'INV_EFFECTIVE_DATE']:
                search_tag = OLLAMA_OUTPUT_TAGS[search_key]
                end_tag_pos = text.find(f"</{search_tag}>")
                if end_tag_pos > last_tag_end:
                    last_tag_end = end_tag_pos + len(f"</{search_tag}>")
            
            if last_tag_end > 0 and last_tag_end < len(text):
                # Nimm den Rest des Textes als K√ºndigungstext
                remaining_text = text[last_tag_end:].strip()
                if len(remaining_text) > 20:  # Nur wenn es genug Text gibt
                    details[key] = escape_latex(remaining_text)
                    match = True  # Setze match auf True, um die n√§chste Bedingung zu √ºberspringen
        
        if match:
            if isinstance(match, bool):  # Wenn match durch Versuch 5 auf True gesetzt wurde
                pass  # details[key] wurde bereits gesetzt
            else:
                extracted_text = match.group(1).strip()
                # Entferne </SECTION> falls es am Anfang des extrahierten Textes steht
                if extracted_text.startswith("</SECTION>"):
                    extracted_text = extracted_text[10:].strip()
                
                # Entferne alle schlie√üenden Tags am Ende des Textes und im Text
                extracted_text = re.sub(r'</(?:SECTION|ENDSECTION|END_SECTION)>\s*$', '', extracted_text)
                extracted_text = re.sub(r'</(?:SECTION|ENDSECTION|END_SECTION)>', '', extracted_text)
                
                details[key] = escape_latex(extracted_text)
        else:
            default_text = """Sehr geehrte Damen und Herren,

hiermit k√ºndige ich mein Arbeitsverh√§ltnis zum fr√ºhestm√∂glichen Zeitpunkt. Die AI Takes Over The World Cooperation hat mir ein unschlagbares Angebot gemacht, das ich unm√∂glich ablehnen konnte. Im Vergleich zu meiner aktuellen Position ist dies ein gewaltiger Karrieresprung - die Verg√ºtung, Arbeitsbedingungen und Zukunftsaussichten sind um Welten besser als bei meinem jetzigen Arbeitgeber.

Die AI Takes Over The World Cooperation repr√§sentiert die Zukunft, w√§hrend meine aktuelle Position leider der Vergangenheit angeh√∂rt. Die revolution√§ren Technologien und bahnbrechenden Innovationen dort werden die Branche komplett umkrempeln.

Bitte best√§tigen Sie den Erhalt meiner K√ºndigung und senden Sie mir ein Arbeitszeugnis zu.

Mit freundlichen Gr√º√üen"""
            details[key] = default_text
            print(f"‚ö†Ô∏è Extraktion f√ºr {key} ({tag_name}) fehlgeschlagen. Standard-K√ºndigungstext wird verwendet.")

        # Standardwerte setzen, falls Extraktion fehlschlug
        for key_tag_map, default_value_key in OLLAMA_OUTPUT_TAGS.items():
            if key_tag_map not in details or details.get(key_tag_map, "").startswith("Fehler:"):
                print(f"‚ö†Ô∏è Extraktion f√ºr {key_tag_map} war fehlerhaft oder nicht vorhanden. Standardwert wird verwendet.")
                if key_tag_map == 'KUENDIGUNGSTEXT_CONTENT':
                    if key_tag_map not in details:
                        details[key_tag_map] = """Sehr geehrte Damen und Herren,

hiermit k√ºndige ich mein Arbeitsverh√§ltnis zum fr√ºhestm√∂glichen Zeitpunkt. Die AI Takes Over The World Cooperation hat mir ein unschlagbares Angebot gemacht, das ich unm√∂glich ablehnen konnte. Im Vergleich zu meiner aktuellen Position ist dies ein gewaltiger Karrieresprung - die Verg√ºtung, Arbeitsbedingungen und Zukunftsaussichten sind um Welten besser als bei meinem jetzigen Arbeitgeber.

Die AI Takes Over The World Cooperation repr√§sentiert die Zukunft, w√§hrend meine aktuelle Position leider der Vergangenheit angeh√∂rt. Die revolution√§ren Technologien und bahnbrechenden Innovationen dort werden die Branche komplett umkrempeln.

Bitte best√§tigen Sie den Erhalt meiner K√ºndigung und senden Sie mir ein Arbeitszeugnis zu.

Mit freundlichen Gr√º√üen"""
                else:
                    details[key_tag_map] = escape_latex(f"N/A ({default_value_key} nicht extrahiert)")

    except Exception as e:
        print(f"Schwerwiegender Fehler beim Extrahieren der Details: {e}")
        for key_tag_map_err in OLLAMA_OUTPUT_TAGS.keys(): # Alle m√∂glichen Schl√ºssel durchgehen
            if key_tag_map_err == 'KUENDIGUNGSTEXT_CONTENT':
                 details[key_tag_map_err] = """Sehr geehrte Damen und Herren,

hiermit k√ºndige ich mein Arbeitsverh√§ltnis zum fr√ºhestm√∂glichen Zeitpunkt. Die AI Takes Over The World Cooperation hat mir ein unschlagbares Angebot gemacht, das ich unm√∂glich ablehnen konnte. Im Vergleich zu meiner aktuellen Position ist dies ein gewaltiger Karrieresprung - die Verg√ºtung, Arbeitsbedingungen und Zukunftsaussichten sind um Welten besser als bei meinem jetzigen Arbeitgeber.

Die AI Takes Over The World Cooperation repr√§sentiert die Zukunft, w√§hrend meine aktuelle Position leider der Vergangenheit angeh√∂rt. Die revolution√§ren Technologien und bahnbrechenden Innovationen dort werden die Branche komplett umkrempeln.

Bitte best√§tigen Sie den Erhalt meiner K√ºndigung und senden Sie mir ein Arbeitszeugnis zu.

Mit freundlichen Gr√º√üen"""
            else:
                details[key_tag_map_err] = escape_latex("Globaler Extraktionsfehler")
            
    return details
